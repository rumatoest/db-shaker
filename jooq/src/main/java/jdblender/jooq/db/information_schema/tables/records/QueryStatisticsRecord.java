/**
 * This class is generated by jOOQ
 */
package jdblender.jooq.db.information_schema.tables.records;


import javax.annotation.Generated;

import jdblender.jooq.db.information_schema.tables.QueryStatistics;

import org.jooq.Field;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QueryStatisticsRecord extends TableRecordImpl<QueryStatisticsRecord> implements Record12<String, Integer, Long, Long, Long, Double, Double, Integer, Integer, Long, Double, Double> {

    private static final long serialVersionUID = 1546714499;

    /**
     * Setter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.SQL_STATEMENT</code>.
     */
    public void setSqlStatement(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.SQL_STATEMENT</code>.
     */
    public String getSqlStatement() {
        return (String) get(0);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.EXECUTION_COUNT</code>.
     */
    public void setExecutionCount(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.EXECUTION_COUNT</code>.
     */
    public Integer getExecutionCount() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.MIN_EXECUTION_TIME</code>.
     */
    public void setMinExecutionTime(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.MIN_EXECUTION_TIME</code>.
     */
    public Long getMinExecutionTime() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.MAX_EXECUTION_TIME</code>.
     */
    public void setMaxExecutionTime(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.MAX_EXECUTION_TIME</code>.
     */
    public Long getMaxExecutionTime() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.CUMULATIVE_EXECUTION_TIME</code>.
     */
    public void setCumulativeExecutionTime(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.CUMULATIVE_EXECUTION_TIME</code>.
     */
    public Long getCumulativeExecutionTime() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.AVERAGE_EXECUTION_TIME</code>.
     */
    public void setAverageExecutionTime(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.AVERAGE_EXECUTION_TIME</code>.
     */
    public Double getAverageExecutionTime() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.STD_DEV_EXECUTION_TIME</code>.
     */
    public void setStdDevExecutionTime(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.STD_DEV_EXECUTION_TIME</code>.
     */
    public Double getStdDevExecutionTime() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.MIN_ROW_COUNT</code>.
     */
    public void setMinRowCount(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.MIN_ROW_COUNT</code>.
     */
    public Integer getMinRowCount() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.MAX_ROW_COUNT</code>.
     */
    public void setMaxRowCount(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.MAX_ROW_COUNT</code>.
     */
    public Integer getMaxRowCount() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.CUMULATIVE_ROW_COUNT</code>.
     */
    public void setCumulativeRowCount(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.CUMULATIVE_ROW_COUNT</code>.
     */
    public Long getCumulativeRowCount() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.AVERAGE_ROW_COUNT</code>.
     */
    public void setAverageRowCount(Double value) {
        set(10, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.AVERAGE_ROW_COUNT</code>.
     */
    public Double getAverageRowCount() {
        return (Double) get(10);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.STD_DEV_ROW_COUNT</code>.
     */
    public void setStdDevRowCount(Double value) {
        set(11, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.STD_DEV_ROW_COUNT</code>.
     */
    public Double getStdDevRowCount() {
        return (Double) get(11);
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<String, Integer, Long, Long, Long, Double, Double, Integer, Integer, Long, Double, Double> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<String, Integer, Long, Long, Long, Double, Double, Integer, Integer, Long, Double, Double> valuesRow() {
        return (Row12) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return QueryStatistics.QUERY_STATISTICS.SQL_STATEMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return QueryStatistics.QUERY_STATISTICS.EXECUTION_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return QueryStatistics.QUERY_STATISTICS.MIN_EXECUTION_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return QueryStatistics.QUERY_STATISTICS.MAX_EXECUTION_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field5() {
        return QueryStatistics.QUERY_STATISTICS.CUMULATIVE_EXECUTION_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field6() {
        return QueryStatistics.QUERY_STATISTICS.AVERAGE_EXECUTION_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field7() {
        return QueryStatistics.QUERY_STATISTICS.STD_DEV_EXECUTION_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return QueryStatistics.QUERY_STATISTICS.MIN_ROW_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return QueryStatistics.QUERY_STATISTICS.MAX_ROW_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field10() {
        return QueryStatistics.QUERY_STATISTICS.CUMULATIVE_ROW_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field11() {
        return QueryStatistics.QUERY_STATISTICS.AVERAGE_ROW_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field12() {
        return QueryStatistics.QUERY_STATISTICS.STD_DEV_ROW_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getSqlStatement();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getExecutionCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getMinExecutionTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getMaxExecutionTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value5() {
        return getCumulativeExecutionTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value6() {
        return getAverageExecutionTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value7() {
        return getStdDevExecutionTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getMinRowCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getMaxRowCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value10() {
        return getCumulativeRowCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value11() {
        return getAverageRowCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value12() {
        return getStdDevRowCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QueryStatisticsRecord value1(String value) {
        setSqlStatement(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QueryStatisticsRecord value2(Integer value) {
        setExecutionCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QueryStatisticsRecord value3(Long value) {
        setMinExecutionTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QueryStatisticsRecord value4(Long value) {
        setMaxExecutionTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QueryStatisticsRecord value5(Long value) {
        setCumulativeExecutionTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QueryStatisticsRecord value6(Double value) {
        setAverageExecutionTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QueryStatisticsRecord value7(Double value) {
        setStdDevExecutionTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QueryStatisticsRecord value8(Integer value) {
        setMinRowCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QueryStatisticsRecord value9(Integer value) {
        setMaxRowCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QueryStatisticsRecord value10(Long value) {
        setCumulativeRowCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QueryStatisticsRecord value11(Double value) {
        setAverageRowCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QueryStatisticsRecord value12(Double value) {
        setStdDevRowCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QueryStatisticsRecord values(String value1, Integer value2, Long value3, Long value4, Long value5, Double value6, Double value7, Integer value8, Integer value9, Long value10, Double value11, Double value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QueryStatisticsRecord
     */
    public QueryStatisticsRecord() {
        super(QueryStatistics.QUERY_STATISTICS);
    }

    /**
     * Create a detached, initialised QueryStatisticsRecord
     */
    public QueryStatisticsRecord(String sqlStatement, Integer executionCount, Long minExecutionTime, Long maxExecutionTime, Long cumulativeExecutionTime, Double averageExecutionTime, Double stdDevExecutionTime, Integer minRowCount, Integer maxRowCount, Long cumulativeRowCount, Double averageRowCount, Double stdDevRowCount) {
        super(QueryStatistics.QUERY_STATISTICS);

        set(0, sqlStatement);
        set(1, executionCount);
        set(2, minExecutionTime);
        set(3, maxExecutionTime);
        set(4, cumulativeExecutionTime);
        set(5, averageExecutionTime);
        set(6, stdDevExecutionTime);
        set(7, minRowCount);
        set(8, maxRowCount);
        set(9, cumulativeRowCount);
        set(10, averageRowCount);
        set(11, stdDevRowCount);
    }
}
