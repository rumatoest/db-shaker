/**
 * This class is generated by jOOQ
 */
package jdblender.jooq.db.public_.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jdblender.jooq.db.public_.Keys;
import jdblender.jooq.db.public_.Public;
import jdblender.jooq.db.public_.tables.records.BrandsRecord;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Brands extends TableImpl<BrandsRecord> {

    private static final long serialVersionUID = 1917670477;

    /**
     * The reference instance of <code>PUBLIC.BRANDS</code>
     */
    public static final Brands BRANDS = new Brands();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BrandsRecord> getRecordType() {
        return BrandsRecord.class;
    }

    /**
     * The column <code>PUBLIC.BRANDS.ID</code>.
     */
    public final TableField<BrandsRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.BRANDS.NAME</code>.
     */
    public final TableField<BrandsRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(16), this, "");

    /**
     * Create a <code>PUBLIC.BRANDS</code> table reference
     */
    public Brands() {
        this("BRANDS", null);
    }

    /**
     * Create an aliased <code>PUBLIC.BRANDS</code> table reference
     */
    public Brands(String alias) {
        this(alias, BRANDS);
    }

    private Brands(String alias, Table<BrandsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Brands(String alias, Table<BrandsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BrandsRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_7;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BrandsRecord>> getKeys() {
        return Arrays.<UniqueKey<BrandsRecord>>asList(Keys.CONSTRAINT_7);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Brands as(String alias) {
        return new Brands(alias, this);
    }

    /**
     * Rename this table
     */
    public Brands rename(String name) {
        return new Brands(name, null);
    }
}
